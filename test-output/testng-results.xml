<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
    <line>
      <![CDATA[tesValidlogin is PASSED]]>
    </line>
    <line>
      <![CDATA[testInvalidLogin is PASSED]]>
    </line>
    <line>
      <![CDATA[testProductVerson is FAILED]]>
    </line>
  </reporter-output>
  <suite name="ActiTime Automation Suite" duration-ms="70786" started-at="2020-02-07T16:13:16 IST" finished-at="2020-02-07T16:14:27 IST">
    <groups>
      <group name="smoke">
        <method signature="ValidLogin_Test.tesValidlogin()[pri:1, instance:scripts.ValidLogin_Test@6321e813]" name="tesValidlogin" class="scripts.ValidLogin_Test"/>
        <method signature="VerifyProductVersion_Test.testProductVerson()[pri:3, instance:scripts.VerifyProductVersion_Test@22a67b4]" name="testProductVerson" class="scripts.VerifyProductVersion_Test"/>
      </group> <!-- smoke -->
      <group name="login">
        <method signature="InValidLogin_Test.testInvalidLogin()[pri:2, instance:scripts.InValidLogin_Test@79be0360]" name="testInvalidLogin" class="scripts.InValidLogin_Test"/>
        <method signature="ValidLogin_Test.tesValidlogin()[pri:1, instance:scripts.ValidLogin_Test@6321e813]" name="tesValidlogin" class="scripts.ValidLogin_Test"/>
      </group> <!-- login -->
    </groups>
    <test name="Smoke Test" duration-ms="70786" started-at="2020-02-07T16:13:16 IST" finished-at="2020-02-07T16:14:27 IST">
      <class name="scripts.VerifyProductVersion_Test">
        <test-method status="PASS" signature="openApp()[pri:0, instance:scripts.VerifyProductVersion_Test@22a67b4]" name="openApp" is-config="true" duration-ms="10656" started-at="2020-02-07T16:14:06 IST" finished-at="2020-02-07T16:14:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="FAIL" signature="testProductVerson()[pri:3, instance:scripts.VerifyProductVersion_Test@22a67b4]" name="testProductVerson" duration-ms="8798" started-at="2020-02-07T16:14:17 IST" finished-at="2020-02-07T16:14:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME 2017.9] but found [actiTIME 2017.4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME 2017.9] but found [actiTIME 2017.4]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at pages.EnterPage.verifyProductVersion(EnterPage.java:42)
at scripts.VerifyProductVersion_Test.testProductVerson(VerifyProductVersion_Test.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductVerson -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:scripts.VerifyProductVersion_Test@22a67b4]" name="closeApp" is-config="true" duration-ms="1227" started-at="2020-02-07T16:14:26 IST" finished-at="2020-02-07T16:14:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProductVerson status=FAILURE method=VerifyProductVersion_Test.testProductVerson()[pri:3, instance:scripts.VerifyProductVersion_Test@22a67b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testProductVerson is FAILED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- scripts.VerifyProductVersion_Test -->
      <class name="scripts.InValidLogin_Test">
        <test-method status="PASS" signature="openApp()[pri:0, instance:scripts.InValidLogin_Test@79be0360]" name="openApp" is-config="true" duration-ms="12455" started-at="2020-02-07T16:13:35 IST" finished-at="2020-02-07T16:13:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="PASS" signature="testInvalidLogin()[pri:2, instance:scripts.InValidLogin_Test@79be0360]" name="testInvalidLogin" duration-ms="17772" started-at="2020-02-07T16:13:48 IST" finished-at="2020-02-07T16:14:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:scripts.InValidLogin_Test@79be0360]" name="closeApp" is-config="true" duration-ms="877" started-at="2020-02-07T16:14:05 IST" finished-at="2020-02-07T16:14:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=SUCCESS method=InValidLogin_Test.testInvalidLogin()[pri:2, instance:scripts.InValidLogin_Test@79be0360] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testInvalidLogin is PASSED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- scripts.InValidLogin_Test -->
      <class name="scripts.ValidLogin_Test">
        <test-method status="PASS" signature="openApp()[pri:0, instance:scripts.ValidLogin_Test@6321e813]" name="openApp" is-config="true" duration-ms="12757" started-at="2020-02-07T16:13:16 IST" finished-at="2020-02-07T16:13:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="PASS" signature="tesValidlogin()[pri:1, instance:scripts.ValidLogin_Test@6321e813]" name="tesValidlogin" duration-ms="5209" started-at="2020-02-07T16:13:29 IST" finished-at="2020-02-07T16:13:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tesValidlogin -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:scripts.ValidLogin_Test@6321e813]" name="closeApp" is-config="true" duration-ms="962" started-at="2020-02-07T16:13:34 IST" finished-at="2020-02-07T16:13:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tesValidlogin status=SUCCESS method=ValidLogin_Test.tesValidlogin()[pri:1, instance:scripts.ValidLogin_Test@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[tesValidlogin is PASSED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- scripts.ValidLogin_Test -->
    </test> <!-- Smoke Test -->
  </suite> <!-- ActiTime Automation Suite -->
</testng-results>
